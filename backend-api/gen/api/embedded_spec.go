// Code generated by go-swagger; DO NOT EDIT.

package api

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

// SwaggerJSON embedded version of the swagger document used at generation time
var SwaggerJSON json.RawMessage

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Forest Protocol API for Odyssey hackathon",
    "title": "Forest Protocol API",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "host": "virtserver.swaggerhub.com",
  "basePath": "/jellevdp/forest-api/1.0.0",
  "paths": {
    "/community/{communityId}/recipe/{recipeId}": {
      "post": {
        "produces": [
          "application/json"
        ],
        "summary": "select recipe for community",
        "operationId": "selectRecipe",
        "responses": {
          "200": {
            "description": "succesfully selected recipe"
          },
          "500": {
            "description": "can't select recipe"
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "name": "communityId",
          "in": "path",
          "required": true
        },
        {
          "type": "string",
          "name": "recipeId",
          "in": "path",
          "required": true
        }
      ]
    },
    "/location": {
      "post": {
        "produces": [
          "application/json"
        ],
        "summary": "select",
        "operationId": "getLocationBasedData",
        "parameters": [
          {
            "description": "Latitude and longitude of location",
            "name": "locationPoint",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/LatLong"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "all the data!",
            "schema": {
              "$ref": "#/definitions/LocationData"
            }
          }
        }
      }
    },
    "/recipe": {
      "post": {
        "description": "Create a number of recipes based on the inputs",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "summary": "Request the creation of recipe proposals",
        "operationId": "createRecipeProposals",
        "parameters": [
          {
            "description": "Inputs required for creating recipe proposals",
            "name": "recipeInput",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/RecipeInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status 200",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Recipe"
              }
            }
          },
          "400": {
            "description": "invalid input"
          }
        }
      }
    }
  },
  "definitions": {
    "Dimensions": {
      "type": "object",
      "properties": {
        "biodiversity": {
          "type": "integer"
        },
        "envProtection": {
          "type": "integer"
        },
        "foodSecurity": {
          "type": "integer"
        },
        "irr": {
          "type": "integer"
        },
        "jobOpportunities": {
          "type": "integer"
        }
      }
    },
    "Flora": {
      "type": "object",
      "properties": {
        "imageUrl": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "percentage": {
          "type": "integer"
        }
      }
    },
    "LatLong": {
      "type": "object",
      "properties": {
        "lat": {
          "type": "string",
          "format": "string"
        },
        "long": {
          "type": "string",
          "format": "string"
        }
      }
    },
    "LocationData": {
      "type": "object",
      "properties": {
        "soiltype": {
          "$ref": "#/definitions/SoilType"
        },
        "weatherAlmanac": {
          "$ref": "#/definitions/WeatherAlmanac"
        }
      }
    },
    "Milestone": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "integer"
        },
        "duration": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "MonthlyWeather": {
      "type": "object",
      "properties": {
        "avgHigh": {
          "type": "string"
        },
        "avgLow": {
          "type": "string"
        },
        "meanTemp": {
          "type": "string"
        },
        "month": {
          "description": "month 01=jan, 02=feb etc",
          "type": "string"
        },
        "precip": {
          "type": "string"
        }
      }
    },
    "Recipe": {
      "type": "object",
      "properties": {
        "dimensions": {
          "$ref": "#/definitions/Dimensions"
        },
        "flora": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Flora"
          }
        },
        "milestones": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Milestone"
          }
        },
        "recipeId": {
          "type": "string"
        }
      }
    },
    "RecipeInput": {
      "type": "object",
      "properties": {
        "communityName": {
          "type": "string"
        },
        "dimensions": {
          "$ref": "#/definitions/Dimensions"
        },
        "locationData": {
          "$ref": "#/definitions/LocationData"
        }
      }
    },
    "SoilType": {
      "type": "object",
      "properties": {
        "clay": {
          "type": "integer"
        },
        "sand": {
          "type": "integer"
        },
        "silt": {
          "type": "integer"
        }
      }
    },
    "WeatherAlmanac": {
      "type": "object",
      "properties": {
        "lat": {
          "type": "string"
        },
        "long": {
          "type": "string"
        },
        "months": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MonthlyWeather"
          }
        }
      }
    }
  }
}`))
}
