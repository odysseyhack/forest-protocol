// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"gitlab.com/henkvanramshorst/forest/backend-api/gen/dto"
)

// CreateRecipeProposalsOKCode is the HTTP code returned for type CreateRecipeProposalsOK
const CreateRecipeProposalsOKCode int = 200

/*CreateRecipeProposalsOK Status 200

swagger:response createRecipeProposalsOK
*/
type CreateRecipeProposalsOK struct {

	/*
	  In: Body
	*/
	Payload *dto.Recipe `json:"body,omitempty"`
}

// NewCreateRecipeProposalsOK creates CreateRecipeProposalsOK with default headers values
func NewCreateRecipeProposalsOK() *CreateRecipeProposalsOK {
	return &CreateRecipeProposalsOK{}
}

// WithPayload adds the payload to the create recipe proposals o k response
func (o *CreateRecipeProposalsOK) WithPayload(payload *dto.Recipe) *CreateRecipeProposalsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create recipe proposals o k response
func (o *CreateRecipeProposalsOK) SetPayload(payload *dto.Recipe) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateRecipeProposalsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateRecipeProposalsBadRequestCode is the HTTP code returned for type CreateRecipeProposalsBadRequest
const CreateRecipeProposalsBadRequestCode int = 400

/*CreateRecipeProposalsBadRequest invalid input

swagger:response createRecipeProposalsBadRequest
*/
type CreateRecipeProposalsBadRequest struct {
}

// NewCreateRecipeProposalsBadRequest creates CreateRecipeProposalsBadRequest with default headers values
func NewCreateRecipeProposalsBadRequest() *CreateRecipeProposalsBadRequest {
	return &CreateRecipeProposalsBadRequest{}
}

// WriteResponse to the client
func (o *CreateRecipeProposalsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}
