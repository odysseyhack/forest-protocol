// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime/middleware"

	strfmt "github.com/go-openapi/strfmt"
)

// NewSelectRecipeParams creates a new SelectRecipeParams object
// with the default values initialized.
func NewSelectRecipeParams() SelectRecipeParams {
	var ()
	return SelectRecipeParams{}
}

// SelectRecipeParams contains all the bound params for the select recipe operation
// typically these are obtained from a http.Request
//
// swagger:parameters selectRecipe
type SelectRecipeParams struct {

	// HTTP Request Object
	HTTPRequest *http.Request `json:"-"`

	/*
	  Required: true
	  In: path
	*/
	CommunityID string
	/*
	  Required: true
	  In: path
	*/
	RecipeID string
}

// BindRequest both binds and validates a request, it assumes that complex things implement a Validatable(strfmt.Registry) error interface
// for simple values it will use straight method calls
func (o *SelectRecipeParams) BindRequest(r *http.Request, route *middleware.MatchedRoute) error {
	var res []error
	o.HTTPRequest = r

	rCommunityID, rhkCommunityID, _ := route.Params.GetOK("communityId")
	if err := o.bindCommunityID(rCommunityID, rhkCommunityID, route.Formats); err != nil {
		res = append(res, err)
	}

	rRecipeID, rhkRecipeID, _ := route.Params.GetOK("recipeId")
	if err := o.bindRecipeID(rRecipeID, rhkRecipeID, route.Formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *SelectRecipeParams) bindCommunityID(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	o.CommunityID = raw

	return nil
}

func (o *SelectRecipeParams) bindRecipeID(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	o.RecipeID = raw

	return nil
}
